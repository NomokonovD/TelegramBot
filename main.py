import os
import sqlite3
import telebot
import requests
from Pars_wiki import *
from koordinati import *
from route import *

bot = telebot.TeleBot('6106225915:AAHnu2uBWMHvmHFCRlB0vsGc8VSmlZoDO24')

#–ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start –∏–ª–∏ /hello –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ , –≥–¥–µ –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
@bot.message_handler(commands=['start', 'hello'])
def start_bot(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')

#–ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /city
@bot.message_handler(commands=['city'])
def search_city(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
    bot.register_next_step_handler(message, city)

#–ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /search
@bot.message_handler(commands=['search'])
def search_organizations(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏")
    bot.register_next_step_handler(message, geolocation)


def city(message):
    message_user = message.text #–æ–∂–∏–¥–∞–µ—Ç—Å—è –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /city
    bot.send_message(message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
    description = pars_wiki(message_user, message.from_user.id, False) #–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏—Å–æ—Ö–¥–∏—Ç –ø–∞—Ä—Å–∏–Ω–≥ —Å –≤–∏–∫–∏–ø–µ–¥–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if description != False: #–µ—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞

        #–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –æ–ø–∏—Å–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ , –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_media_group(message.chat.id,
                             [telebot.types.InputMediaPhoto(open(f'./img/{message.from_user.id}/000001.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{message.from_user.id}/000002.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{message.from_user.id}/000003.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{message.from_user.id}/000004.jpg', 'rb'))])
        #–ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –ø–∞–ø–∫–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–Ω–∏ —É–¥–∞–ª—è—é—Ç—Å—è
        for i in range(1, 5):
            os.remove(f'./img/{message.from_user.id}/00000{i}.jpg')

        bot.send_message(message.chat.id, description)
        bot.delete_message(message.chat.id, message.message_id + 1) #–ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∑–∞–ø—Ä–æ—Å—É —É–¥–∞–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...'
        #–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –æ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        markup = telebot.types.InlineKeyboardMarkup()

        KY = telebot.types.InlineKeyboardButton(text="–î–∞", callback_data=f"KYES:{message_user.capitalize()}")
        KN = telebot.types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data=f"KNO:{message_user.capitalize()}")
        markup.add(KY, KN)
        bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞", reply_markup=markup)
    #–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ –≥–æ—Ä–æ–¥ , –∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ , —Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    else:
        bot.delete_message(message.chat.id, message.message_id + 1)
        bot.send_message(message.chat.id, '–ì–æ—Ä–æ–¥ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')


@bot.callback_query_handler(func=lambda call: call.data.startswith(("KYES:", "KNO:")))
def attractions(call):
    city = call.data.split(":")[1] # –ø–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π

    if call.data ==f"KYES:{city}": #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–î–∞"
        bot.send_message(call.message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
        koordinaten=[]

        #–ü–æ–ª—É—á–∞–µ–º ID –≥–æ—Ä–æ–¥–∞ –∏–∑ –ë–î, –æ –∫–æ—Ç–æ—Ä–æ–º –¥–µ–ª–∞–ª –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        connection = sqlite3.connect("cities.db")
        cursor = connection.cursor()
        query_cityID = '''SELECT city_id
                       FROM city
                       WHERE name_city = ?'''

        cursor.execute(query_cityID, (city,))

        city_id = cursor.fetchall()[0][0]  #ID –≥–æ—Ä–æ–¥–∞ –∏–∑ DATABASE
        connection.close()

        #–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ –ë–î –ø–æ ID –≥–æ—Ä–æ–¥–∞
        connection = sqlite3.connect("cities.db")
        cursor = connection.cursor()
        query = '''SELECT name_attraction
                       FROM attraction
                       WHERE city_id = ?'''
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ID –≥–æ—Ä–æ–¥–∞
        cursor.execute(query, (city_id,))
        attractions = cursor.fetchall()

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        BD = [attraction[0] for attraction in attractions]
        connection.close()
        print(BD)
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

        for q in BD:
            e = q + " " + city
            koordinaten.append(koordinatens(e))

        sorted_attractions = driver(koordinaten)

        markup = telebot.types.InlineKeyboardMarkup()
        gor = ""
        for w in sorted_attractions:
            gor += BD[w - 1] + ","
            KN = telebot.types.InlineKeyboardButton(text=BD[w - 1], callback_data=BD[w - 1])
            markup.add(KN)

        bot.send_message(call.message.chat.id,
                         f"–î–æ—Å—Ç—Ä–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≥–æ—Ä–æ–¥–∞ {city} –ª—É—á—à–µ –ø–æ—Å–∏—Ç–∏—Ç—å –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ {gor} –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ —á—ë–º–Ω–∏–±—É–¥—å –ø–æ –ø–æ–¥—Ä–æ–±–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ",
                         reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def dostoprimichatelnosti(call):
    bot.send_message(call.message.chat.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...')
    print(call.data)
    description = pars_wiki(call.data, call.message.from_user.id, True)
    if description != False:
        bot.send_media_group(call.message.chat.id,
                             [telebot.types.InputMediaPhoto(open(f'./img/{call.message.from_user.id}/000001.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{call.message.from_user.id}/000002.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{call.message.from_user.id}/000003.jpg', 'rb')),
                              telebot.types.InputMediaPhoto(open(f'./img/{call.message.from_user.id}/000004.jpg', 'rb'))])
        for i in range(1, 5):
            os.remove(f'./img/{call.message.from_user.id}/00000{i}.jpg')

        bot.send_message(call.message.chat.id, description)
        bot.delete_message(call.message.chat.id, call.message.message_id + 1)


#–§–£–ù–ö–¶–ò–ò , –ö–û–¢–û–†–´–ï –û–¢–í–ï–ß–ê–Æ–¢ –ó–ê –ì–ï–û–õ–û–ö–ê–¶–ò–Æ –ò –ü–û–ò–°–ö –ë–õ–ò–ñ–ê–ô–®–ï–ô –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ò
def geolocation(message):
    message_user = message.text
    print(message_user)
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –∑–∞–ø—Ä–æ—Å–æ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    keyboard = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    button = telebot.types.KeyboardButton(text="üåê –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)
    keyboard.add(button)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    bot.send_message(message.chat.id, "üëΩ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏", reply_markup=keyboard)
    bot.register_next_step_handler(message, process_shop, message_user)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –º–∞–≥–∞–∑–∏–Ω–∞/–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ geolocation
def process_shop(message, mes_user):
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    latitude = message.location.latitude
    longitude = message.location.longitude

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    find_shops(message.chat.id, mes_user, latitude, longitude)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤
def find_shops(user_id, shop, lat, lon):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    item2 = telebot.types.KeyboardButton("üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    markup.add(item1,item2)

    req = str(lon) + ',' + str(lat)
    PARAMS = {
        "apikey": "f60ca0c9-9813-4936-881f-e625597d9c7b",
        "text": shop,
        "lang": "ru_RU",
        "type": "biz",
        "results": "5",
        "ll": req,
        "spn": "0.021206,0.021055",
        "rspn": "1"
    }
    request = requests.get(url="https://search-maps.yandex.ru/v1/", params=PARAMS)
    json_data = request.json()

    if "features" in json_data and len(json_data["features"]) > 0:
        # –ú–∞–≥–∞–∑–∏–Ω—ã –Ω–∞–π–¥–µ–Ω—ã, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        coord_str1 = json_data["features"][0]["geometry"]["coordinates"][0]
        coord_str2 = json_data["features"][0]["geometry"]["coordinates"][1]
        shop_addr = json_data["features"][0]["properties"]["CompanyMetaData"]["address"]
        shop_hours = json_data["features"][0]["properties"]["CompanyMetaData"]["Hours"]["text"]
        #shop_category = json_data["features"][0]["properties"]["CompanyMetaData"]["Categories"][1]["name"]
        shop_name = json_data["features"][0]["properties"]["CompanyMetaData"]["name"]
        bot.send_message(user_id, f'{shop_name}\n–ê–¥—Ä–µ—Å: {shop_addr}\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {shop_hours}')
        map_link = f"http://maps.yandex.ru/?ll={coord_str1},{coord_str2}&spn=0.067205,0.018782&z=15&l=map,stv"
        bot.send_location(user_id, coord_str2, coord_str1, reply_markup=markup)
    else:
        # –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        bot.send_message(user_id, "üò• –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –≤–±–ª–∏–∑–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", reply_markup=markup)

#–ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ , –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π /start
@bot.message_handler(content_types=['text'])
def hi(message):
    hello = ['–ø—Ä–∏–≤–µ—Ç', '—Ö–∞–π', 'hello', 'hi', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ']
    if message.text.lower() in hello:
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!')

bot.infinity_polling()


